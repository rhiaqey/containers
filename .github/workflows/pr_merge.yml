name: PR Merge

on:
  push:
    branches:
      - master

env:
  CI: true

jobs:
  Setup:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        containers: [
          {name: "caddy", image: "rhiaqey/caddy", version: "2.9.1", push: true},
          {name: "redis", image: "rhiaqey/redis", version: "7.4.2", push: true},
          {name: "redis-sentinel", image: "rhiaqey/redis-sentinel", version: "7.4.2", push: true},
          {name: "valkey", image: "rhiaqey/valkey", version: "8.0.2", push: true},
          {name: "valkey-sentinel", image: "rhiaqey/valkey-sentinel", version: "8.0.2", push: true},
          {name: "fluent-bit", image: "rhiaqey/fluent-bit", version: "3.2.5", push: true},
          {name: "rhiaqey-build", image: "rhiaqey/build", version: "1.0.11", push: true},
          {name: "rhiaqey-run", image: "rhiaqey/run", version: "1.0.9", push: true},
        ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: QEMU setup
        uses: docker/setup-qemu-action@v3

      - name: Docker buildx setup
        uses: docker/setup-buildx-action@v3

      - name: Log into registry
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ matrix.containers.image }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push docker image for ${{ matrix.gateways.binary }}
        id: build-and-push
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.containers.name }}
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' && matrix.container.push == true }}
          tags: ${{ matrix.containers.image }}:${{ matrix.containers.version }},${{ matrix.containers.image }}:latest
          labels: ${{ steps.meta.outputs.labels }}
          outputs: "type=registry"
          build-args: |
            VERSION=${{ matrix.containers.version }}
